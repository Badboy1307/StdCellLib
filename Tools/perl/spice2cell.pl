#!/usr/bin/perl -w
use strict;

my $demo=<<EOF
.subckt AND2X1 Y B vdd gnd A
M0 a_2_6# A vdd vdd pfet w=2u l=0.2u
+ ad=0p pd=0u as=0p ps=0u 
M1 vdd B a_2_6# vdd pfet w=2u l=0.2u
+ ad=0p pd=0u as=0p ps=0u 
M2 Y a_2_6# vdd vdd pfet w=2u l=0.2u
+ ad=0p pd=0u as=0p ps=0u 
M3 a_9_6# A a_2_6# Gnd nfet w=2u l=0.2u
+ ad=0p pd=0u as=0p ps=0u 
M4 gnd B a_9_6# Gnd nfet w=2u l=0.2u
+ ad=0p pd=0u as=0p ps=0u 
M5 Y a_2_6# gnd Gnd nfet w=1u l=0.2u
+ ad=0p pd=0u as=0p ps=0u 
.ends AND2X1
EOF
;

my %seenpins=();

our $name="UNNAMED";
our $pins="";

my %iomap=('A'=>'I','B'=>'I','C'=>'I','CLK'=>'I','D'=>'I','EN'=>'I','Q'=>'O','R'=>'I','S'=>'I','Y'=>'O','YC'=>'O','YS'=>'O','gnd'=>'','vdd'=>'','GND'=>'','VDD'=>'','Z'=>'O','DI'=>'I','DO'=>'O','OEN'=>'I','YPAD'=>'O','gnd2'=>'','vdd2'=>'','GND2'=>'','VDD2'=>'','vss'=>'','VSS'=>'');
my %mosmap=('pfet'=>'pmos','nfet'=>'nmos','nmos'=>'nmos','pmos'=>'pmos','hnfet'=>'nmos','hpfet'=>'pmos');
our %internalnets=();
our $internalcounter=0;
our $OUT;

sub internal($)
{
  my $in=$_[0];
  return $in unless($in=~m/\#$/);
  #print $OUT "#$in? $internalcounter\n";
  $internalnets{$in}=$internalcounter++ if(!defined($internalnets{$in}));
  return $internalnets{$in};
}

if($ARGV[0] && open IN,"<$ARGV[0]")
{
  while(<IN>)
  {
    if(m/^\.subckt (\w+) (.*)$/)
    {
      $name=$1;
      $pins=$2;
      %internalnets=();
      $internalcounter=1;
      my %pins=();
      $pins{$iomap{$_}}{$_}++ foreach(split " ",$pins);
      $seenpins{$_}++ foreach(split " ",$pins);
      open $OUT,">$name.cell";
      print $OUT ".AUTOGENERATED by spice2cell script from $ARGV[0]\n";
      print $OUT ".inputs ".join(" ",reverse sort keys %{$pins{'I'}})."\n";
      print $OUT ".outputs ".join(" ",reverse sort keys %{$pins{'O'}})."\n";
      print $OUT ".ORDER \"Gate Drain Source MOSFET\"\n";
    }
    elsif(m/^M\d+ (\w+#?) (\w+#?) (\w+#?) (\w+#?) (pfet|nfet|nmos|pmos|hnfet|hpfet)/)
    {
      my ($g,$d,$s,$m)=($2,$1,$3,$5);
      $g=internal($g);
      $d=internal($d);
      $s=internal($s);
      print $OUT "$g $d $s ".$mosmap{$m}."\n";
    }
    elsif(m/^R\d+ /)
    {
      #TODO: Resistors for Padcells
    }
    elsif(m/^\+/)
    {
    }
    elsif(m/^\s*$/)
    {
    }
    elsif(m/^\.ends/)
    {
      $name="UNNAMED";
      $pins="";
      close $OUT;
    }
    else
    {
      print STDERR "Error: $_\n";
    }
  
  }
  close IN;
}

print "Seen pins:\n(";
foreach(sort keys %seenpins)
{
  next if(defined($iomap{$_}));
  print "'$_'=>'I'," ;
}
print ")\n";
