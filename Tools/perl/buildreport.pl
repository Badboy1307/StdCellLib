#!/usr/bin/perl -w

# This tool generates a HTML build report

my $report="buildreport.html";

open OUT,">$report";
print OUT "<html><head><title>Build Report Libresilicon</title></head><body>";
print OUT "<h1>Build Report</h1>";
print OUT "Generated: ".localtime()."<br/>\n";

print OUT "<h2>Input files: PDK, DRC, layer definitions, parameters:</h2>";
my %inputs=("drc.lydrc"=>"DRC for KLayout","librecell_tech.py"=>"Cell layouting rules, DRC","libresilicon.m"=>"Transitor BSIM parameters","libresilicon.tech"=>"Magic Layers and Parasitic extraction parameters","transistor.sp"=>"Transistor size template for SPICE models","template.lef"=>"Template for LEF Files");
print OUT "<table border='1'><tr><th>Filename</th><th>Description</th></tr>";
foreach(sort keys %inputs)
{
	#  print OUT "<tr><td><a href='../Tech/$_' target='_blank'>$_</a></td><td>$inputs{$_}</td></tr>";
  print OUT "<tr><td>".(-f "../Tech/$_"? "<a href='../Tech/$_' target='_blank'><font color='green'>&radic;</font>$_</a>":"<font color='red'>X</font>")."</td><td>$inputs{$_}</td></tr>";

}
print OUT "</table>";

print OUT "<h2>Standard Cells:</h2>\n";

print OUT "<table border='1'>";
print OUT "<tr><th>Cell</th><th title='Cell description'>cell</th><th title='Magic (*.mag) file was generated'>Mag</th><th title='SVG Image file was generated'>SVG</th><th title='Logfile was generated'>Log</th><th title='Error file was created'>Err</th><th title='The characterization has generated a .lib file in liberty file format'>Liberty</th><th title='A LEF file was generated'>LEF</th><th title='a GDS-II file with the mask was generated'>GDS</th><th title='A SPICE netlist with parasitic extraction included was generated'>Parasitic</th><th title='The 2D area of the cell in square lambdas'>Area</th><th title='The result of the Layout-Vs.-Schematic check of the cell layouting step'>LVS</th><th title='The number of deduplicated euler tours'>Euler</th><th title='Runtime of the cell layouting step'>LayoutTime</th><th title='number of generated nets during layouting step'>Nets</th><th title='Number of Ports of the cell'>Ports</th><th title='Routing iterations'>Iterat.</th><th title='Error messages generated by layouting or characterization'>Errors</th></tr>";
foreach my $file (<*.cell>)
{
  my $errfile=$file; $errfile=~s/\.cell$/.err/;
  my $logfile=$file; $logfile=~s/\.cell$/.log/;
  my $magfile=$file; $magfile=~s/\.cell$/.mag/;
  my $libfile=$file; $libfile=~s/\.cell$/.lib/;
  my $svgfile=$file; $svgfile=~s/\.cell$/.svg/;
  my $leffile="outputlib/".$file; $leffile=~s/\.cell$/.lef/;
  my $gdsfile="outputlib/".$file; $gdsfile=~s/\.cell$/.gds/;
  my $spicefile=$file; $spicefile=~s/\.cell$/.spice/;

  my $area="";
  my $lvs="";
  my $euler="";
  my $layouttime="";
  my $nets="";
  my $errors="";
  my $routing="";
  my %ports=();

  print OUT "<tr><td>$file</td>";
  print OUT "<td>".(-f $file ? "<a href='$file' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $magfile ? "<a href='$magfile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $svgfile ? "<a href='$svgfile' target='_blank'><font color='green'>&radic;</font><img src='$svgfile' height='30'/></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $logfile ? "<a href='$logfile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $errfile ? "<a href='$errfile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $libfile ? "<a href='$libfile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $leffile ? "<a href='$leffile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $gdsfile ? "<a href='$gdsfile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";
  print OUT "<td>".(-f $spicefile?"<a href='$spicefile' target='_blank'><font color='green'>&radic;</font></a>":"<font color='red'>X</font>")."</td>";

  if(open LIB,"<$libfile")
  {
    while(<LIB>)
    {
      $area=$1 if m/area:\s*(\d+)\.?\d*\s*/;
    }
    close LIB;
  }
  if(open LIB,"<$errfile")
  {
    while(<LIB>)
    {
      $lvs=$1 if m/LVS result: (\w+)/;
      $euler=$1 if m/Number of deduplicated eulertours: (\d+)/;
      $layouttime=$1 if(m/INFO:\s*Done\s*\(Total duration: ([\d:.]+)\s*\)/);
      $nets=$1 if(m/Nets output: (\d+)/);
      $routing=$1 if(m/Routing iteration (\d+)/);
      $ports{$1}=1 if(m/Port: name = (\w+) exists/);
      $errors.=$1." " if(m/AssertionError: (.*)/);
      $errors.=$1." " if(m/Exception: (.*)/);
      $errors.=$1." " if(m/ERROR: (.*)/);
    }
    close LIB;
  }
  $lvs=~s/FAILED/<font color='red'>FAILED<\/font>/;

  print OUT "<td align='right'>$area</td><td>$lvs</td><td>$euler</td><td>$layouttime</td><td>$nets</td><td>".scalar(keys %ports)."</td><td>$routing</td><td><font color='red'>$errors</font></td>";

  print OUT "</tr>";


}
print OUT "</table><br/>";


print OUT "<h2>Output files:</h2>";
my %outputs=("libresilicon.sp"=>"SPICE netlist with all cells","libresilicon.lib"=>"LIBERTY File with Characterization of all cells","libresilicon.lef"=>"LEF File with all cells","library.gds"=>"GDS-II file with masks for all cells","../Documents/StdCellLib.pdf"=>"PDF Documentation of the Standard cell library");
print OUT "<table border='1'><tr><th>Filename</th><th>Description</th></tr>";
foreach(sort keys %outputs)
{
  print OUT "<tr><td>".(-f $_? "<a href='$_' target='_blank'><font color='green'>&radic;</font>$_</a>":"<font color='red'>X</font>$_")."</td><td>$outputs{$_}</td></tr>";
}
print OUT "</table>";


print OUT "</body></html>";
print "firefox $report\n";
close OUT;

